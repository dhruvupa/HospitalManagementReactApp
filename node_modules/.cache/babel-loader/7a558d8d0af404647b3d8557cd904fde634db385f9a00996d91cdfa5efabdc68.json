{"ast":null,"code":"var _jsxFileName = \"/Users/achyutamverma/Desktop/Masters /Sem 2/Data Architecture /Project/Hospital/HospitalManagementReactApp/src/Pages/Dashboard/DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport \"./DoctorDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [doctor, setDoctor] = useState(null);\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\n  const [shiftStart, setShiftStart] = useState(\"\");\n  const [shiftEnd, setShiftEnd] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Fetch doctor session data from backend\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/doctor/dashboard\", {\n      withCredentials: true\n    }).then(response => {\n      setDoctor(response.data);\n      console.log(\"Doctor fetched from session:\", response.data);\n    }).catch(error => {\n      console.error(\"Error fetching doctor:\", error);\n      navigate(\"/doctor/login\"); // Redirect if session is invalid\n    });\n  }, [navigate]);\n\n  // Fetch available time slots (if needed)\n  useEffect(() => {\n    if (doctor) {\n      axios.get(\"http://localhost:8080/doctor/getAvailableTimeSlots\", {\n        withCredentials: true\n      }).then(response => setAvailableTimeSlots(response.data)).catch(error => console.error(\"Error fetching available time slots:\", error));\n    }\n  }, [doctor]);\n\n  // Handle shift update\n  const handleUpdateShift = async e => {\n    e.preventDefault();\n    const shiftData = {\n      shiftStart,\n      shiftEnd\n    };\n    try {\n      await axios.post(\"http://localhost:8080/doctor/updateShift\", shiftData, {\n        withCredentials: true\n      });\n      alert(\"Shift timings updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating shift timings:\", error);\n      alert(\"Failed to update shift timings.\");\n    }\n  };\n\n  // Handle logout\n  const handleLogout = async () => {\n    await axios.post(\"http://localhost:8080/doctor/logout\", {}, {\n      withCredentials: true\n    });\n    navigate(\"/doctor/login\");\n  };\n  if (!doctor) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logout-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83E\\uDE7A Doctor Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, Dr. \", doctor.firstName, \" \", doctor.lastName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update Shift Timings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdateShift,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: shiftStart,\n          onChange: e => setShiftStart(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: shiftEnd,\n          onChange: e => setShiftEnd(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Shift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Time Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: availableTimeSlots.length > 0 ? availableTimeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: slot\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No available time slots.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/doctor/viewAppointments\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"View Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorDashboard, \"PVf5SG6kYQsQyMc/NkhCRXsqL/Y=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Link","jsxDEV","_jsxDEV","DoctorDashboard","_s","doctor","setDoctor","availableTimeSlots","setAvailableTimeSlots","shiftStart","setShiftStart","shiftEnd","setShiftEnd","navigate","get","withCredentials","then","response","data","console","log","catch","error","handleUpdateShift","e","preventDefault","shiftData","post","alert","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","firstName","lastName","onSubmit","type","value","onChange","target","required","length","map","slot","index","to","_c","$RefreshReg$"],"sources":["/Users/achyutamverma/Desktop/Masters /Sem 2/Data Architecture /Project/Hospital/HospitalManagementReactApp/src/Pages/Dashboard/DoctorDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./DoctorDashboard.css\"; \r\n\r\nconst DoctorDashboard = () => {\r\n    const [doctor, setDoctor] = useState(null);\r\n    const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\r\n    const [shiftStart, setShiftStart] = useState(\"\");\r\n    const [shiftEnd, setShiftEnd] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    // Fetch doctor session data from backend\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/doctor/dashboard\", { withCredentials: true })\r\n            .then(response => {\r\n                setDoctor(response.data);\r\n                console.log(\"Doctor fetched from session:\", response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Error fetching doctor:\", error);\r\n                navigate(\"/doctor/login\"); // Redirect if session is invalid\r\n            });\r\n    }, [navigate]);\r\n \r\n    \r\n\r\n    // Fetch available time slots (if needed)\r\n    useEffect(() => {\r\n        if (doctor) {\r\n            axios.get(\"http://localhost:8080/doctor/getAvailableTimeSlots\", { withCredentials: true })\r\n                .then(response => setAvailableTimeSlots(response.data))\r\n                .catch(error => console.error(\"Error fetching available time slots:\", error));\r\n        }\r\n    }, [doctor]);\r\n\r\n    // Handle shift update\r\n    const handleUpdateShift = async (e) => {\r\n        e.preventDefault();\r\n        const shiftData = { shiftStart, shiftEnd };\r\n        try {\r\n            await axios.post(\"http://localhost:8080/doctor/updateShift\", shiftData, { withCredentials: true });\r\n            alert(\"Shift timings updated successfully!\");\r\n        } catch (error) {\r\n            console.error(\"Error updating shift timings:\", error);\r\n            alert(\"Failed to update shift timings.\");\r\n        }\r\n    };\r\n\r\n    // Handle logout\r\n    const handleLogout = async () => {\r\n        await axios.post(\"http://localhost:8080/doctor/logout\", {}, { withCredentials: true });\r\n        navigate(\"/doctor/login\");\r\n    };\r\n\r\n    if (!doctor) return <p>Loading...</p>;\r\n\r\n    return (\r\n        <div className=\"dashboard-container\">\r\n            <div className=\"logout-section\">\r\n                <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n            </div>\r\n\r\n            <h2>🩺 Doctor Dashboard</h2>\r\n            <h3>Welcome, Dr. {doctor.firstName} {doctor.lastName}!</h3>\r\n\r\n            <div className=\"section\">\r\n                <h3>Update Shift Timings</h3>\r\n                <form onSubmit={handleUpdateShift}>\r\n                    <input\r\n                        type=\"time\"\r\n                        value={shiftStart}\r\n                        onChange={(e) => setShiftStart(e.target.value)}\r\n                        required\r\n                    />\r\n                    <input\r\n                        type=\"time\"\r\n                        value={shiftEnd}\r\n                        onChange={(e) => setShiftEnd(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Update Shift</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"section\">\r\n                <h3>Available Time Slots</h3>\r\n                <ul>\r\n                    {availableTimeSlots.length > 0 ? (\r\n                        availableTimeSlots.map((slot, index) => (\r\n                            <li key={index}>{slot}</li>\r\n                        ))\r\n                    ) : (\r\n                        <p>No available time slots.</p>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"section\">\r\n                <Link to=\"/doctor/viewAppointments\">\r\n                    <button type=\"button\">View Appointments</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACZE,KAAK,CAACe,GAAG,CAAC,wCAAwC,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CACzEC,IAAI,CAACC,QAAQ,IAAI;MACdX,SAAS,CAACW,QAAQ,CAACC,IAAI,CAAC;MACxBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,QAAQ,CAACC,IAAI,CAAC;IAC9D,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CT,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;EACV,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAId;EACAhB,SAAS,CAAC,MAAM;IACZ,IAAIQ,MAAM,EAAE;MACRN,KAAK,CAACe,GAAG,CAAC,oDAAoD,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC,CACrFC,IAAI,CAACC,QAAQ,IAAIT,qBAAqB,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC,CACtDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC,CAAC;IACrF;EACJ,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMkB,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,SAAS,GAAG;MAAEjB,UAAU;MAAEE;IAAS,CAAC;IAC1C,IAAI;MACA,MAAMZ,KAAK,CAAC4B,IAAI,CAAC,0CAA0C,EAAED,SAAS,EAAE;QAAEX,eAAe,EAAE;MAAK,CAAC,CAAC;MAClGa,KAAK,CAAC,qCAAqC,CAAC;IAChD,CAAC,CAAC,OAAON,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDM,KAAK,CAAC,iCAAiC,CAAC;IAC5C;EACJ,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAM9B,KAAK,CAAC4B,IAAI,CAAC,qCAAqC,EAAE,CAAC,CAAC,EAAE;MAAEZ,eAAe,EAAE;IAAK,CAAC,CAAC;IACtFF,QAAQ,CAAC,eAAe,CAAC;EAC7B,CAAC;EAED,IAAI,CAACR,MAAM,EAAE,oBAAOH,OAAA;IAAA4B,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErC,oBACIhC,OAAA;IAAKiC,SAAS,EAAC,qBAAqB;IAAAL,QAAA,gBAChC5B,OAAA;MAAKiC,SAAS,EAAC,gBAAgB;MAAAL,QAAA,eAC3B5B,OAAA;QAAQkC,OAAO,EAAEP,YAAa;QAACM,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eAENhC,OAAA;MAAA4B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BhC,OAAA;MAAA4B,QAAA,GAAI,eAAa,EAACzB,MAAM,CAACgC,SAAS,EAAC,GAAC,EAAChC,MAAM,CAACiC,QAAQ,EAAC,GAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3DhC,OAAA;MAAKiC,SAAS,EAAC,SAAS;MAAAL,QAAA,gBACpB5B,OAAA;QAAA4B,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BhC,OAAA;QAAMqC,QAAQ,EAAEhB,iBAAkB;QAAAO,QAAA,gBAC9B5B,OAAA;UACIsC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEhC,UAAW;UAClBiC,QAAQ,EAAGlB,CAAC,IAAKd,aAAa,CAACc,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UAC/CG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACFhC,OAAA;UACIsC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE9B,QAAS;UAChB+B,QAAQ,EAAGlB,CAAC,IAAKZ,WAAW,CAACY,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACFhC,OAAA;UAAQsC,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENhC,OAAA;MAAKiC,SAAS,EAAC,SAAS;MAAAL,QAAA,gBACpB5B,OAAA;QAAA4B,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BhC,OAAA;QAAA4B,QAAA,EACKvB,kBAAkB,CAACsC,MAAM,GAAG,CAAC,GAC1BtC,kBAAkB,CAACuC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC/B9C,OAAA;UAAA4B,QAAA,EAAiBiB;QAAI,GAAZC,KAAK;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC7B,CAAC,gBAEFhC,OAAA;UAAA4B,QAAA,EAAG;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACjC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENhC,OAAA;MAAKiC,SAAS,EAAC,SAAS;MAAAL,QAAA,eACpB5B,OAAA,CAACF,IAAI;QAACiD,EAAE,EAAC,0BAA0B;QAAAnB,QAAA,eAC/B5B,OAAA;UAAQsC,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC9B,EAAA,CApGID,eAAe;EAAA,QAKAL,WAAW;AAAA;AAAAoD,EAAA,GAL1B/C,eAAe;AAsGrB,eAAeA,eAAe;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}